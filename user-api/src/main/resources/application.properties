spring.application.name=user
server.port=5006
server.error.include-message=always
spring.datasource.url=jdbc:p6spy:mysql://127.0.0.1:3306/sock_user?zipkinServiceName=user-db
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.p6spy.engine.spy.P6SpyDriver
spring.datasource.initialization-mode=always
spring.zipkin.enabled=false
spring.sleuth.sampler.rate=30
spring.zipkin.discovery-client-enabled=false
management.endpoints.web.exposure.include=info,health,prometheus,metrics
management.endpoint.health.probes.enabled=true
management.info.git.mode=full
management.metrics.export.wavefront.uri=https://demo.wavefront.com
management.metrics.export.wavefront.enabled=true
management.metrics.export.wavefront.api-token=${WAVEFRONT_API_TOKEN}
wavefront.application.name=socks-shop
wavefront.application.cluster=socks-shop
server.compression.enabled=true
server.compression.min-response-size=1KB
spring.resources.cache.cachecontrol.max-age=1d
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=10s
# openssl genrsa -out private.pem 2048
# openssl rsa -in private.pem -outform PEM -pubout -out public_key.pem
# openssl pkcs8 -topk8 -inform PEM -in private.pem -out private_key.pem -nocrypt
jwt.private-key=classpath:private_key.pem
jwt.public-key=classpath:public_key.pem
spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:public_key.pem
oauth.clients[0].client-id=ui
oauth.clients[0].client-secret={noop}ui
oauth.clients[0].additional-information.name=Spring Sockshop
oauth.clients[0].additional-information.url=${sock.home-url}
oauth.clients[0].authorized-grant-types=authorization_code,refresh_token
oauth.clients[0].scope=openid,customer:read,customer:write,order:read,order:write,cart:read,cart:write,shipping:read,shipping:write,payment:auth
oauth.clients[0].registered-redirect-uri=${sock.home-url}/login/oauth2/code/ui
oauth.clients[0].auto-approve-scopes=${oauth.clients[0].scope}
oauth.clients[0].access-token-validity-seconds=3600
oauth.clients[0].refresh-token-validity-seconds=43200
oauth.clients[1].client-id=sock
oauth.clients[1].client-secret={noop}sock
oauth.clients[1].authorized-grant-types=password,refresh_token,client_credentials
oauth.clients[1].scope=openid,catalog:read,customer:read,customer:write,order:read,order:write,cart:read,cart:write,shipping:read,shipping:write,payment:auth
# https://docs.spring.io/spring-security/site/docs/5.3.2.RELEASE/reference/html5/#oauth2login-sample-redirect-uri
oauth.clients[1].access-token-validity-seconds=86400
oauth.clients[1].refresh-token-validity-seconds=604800
sock.home-url=http://localhost:6060
sock.login-url=${sock.home-url}/oauth2/authorization/ui
# hack to disable redis by default
spring.redis.client-type=jedis
spring.session.store-type=none
spring.session.timeout=3d